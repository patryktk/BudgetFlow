/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { createIncomeCategory } from '../fn/income-category/create-income-category';
import { CreateIncomeCategory$Params } from '../fn/income-category/create-income-category';
import { deleteIncomeCategory } from '../fn/income-category/delete-income-category';
import { DeleteIncomeCategory$Params } from '../fn/income-category/delete-income-category';
import { getAllIncomeCategories } from '../fn/income-category/get-all-income-categories';
import { GetAllIncomeCategories$Params } from '../fn/income-category/get-all-income-categories';
import { IncomeCategoryResponse } from '../models/income-category-response';

@Injectable({ providedIn: 'root' })
export class IncomeCategoryService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `createIncomeCategory()` */
  static readonly CreateIncomeCategoryPath = '/expenses/incomeCategory';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `createIncomeCategory()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createIncomeCategory$Response(params: CreateIncomeCategory$Params, context?: HttpContext): Observable<StrictHttpResponse<IncomeCategoryResponse>> {
    return createIncomeCategory(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `createIncomeCategory$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createIncomeCategory(params: CreateIncomeCategory$Params, context?: HttpContext): Observable<IncomeCategoryResponse> {
    return this.createIncomeCategory$Response(params, context).pipe(
      map((r: StrictHttpResponse<IncomeCategoryResponse>): IncomeCategoryResponse => r.body)
    );
  }

  /** Path part for operation `getAllIncomeCategories()` */
  static readonly GetAllIncomeCategoriesPath = '/expenses/incomeCategory/getAllIncomeCategories';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getAllIncomeCategories()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllIncomeCategories$Response(params?: GetAllIncomeCategories$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<IncomeCategoryResponse>>> {
    return getAllIncomeCategories(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getAllIncomeCategories$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getAllIncomeCategories(params?: GetAllIncomeCategories$Params, context?: HttpContext): Observable<Array<IncomeCategoryResponse>> {
    return this.getAllIncomeCategories$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<IncomeCategoryResponse>>): Array<IncomeCategoryResponse> => r.body)
    );
  }

  /** Path part for operation `deleteIncomeCategory()` */
  static readonly DeleteIncomeCategoryPath = '/expenses/incomeCategory/{incomeCategoryId}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `deleteIncomeCategory()` instead.
   *
   * This method doesn't expect any request body.
   */
  deleteIncomeCategory$Response(params: DeleteIncomeCategory$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return deleteIncomeCategory(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `deleteIncomeCategory$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  deleteIncomeCategory(params: DeleteIncomeCategory$Params, context?: HttpContext): Observable<void> {
    return this.deleteIncomeCategory$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

}
